{
  "name": "Complete Content Pipeline: Notion ‚Üí OpenAI ‚Üí Ghost",
  "nodes": [
    {
      "parameters": {
        "databaseId": {
          "__rl": true,
          "value": "285799f2-efe7-80e4-b704-ddb99840cedc",
          "mode": "list",
          "cachedResultName": "Content Pipeline",
          "cachedResultUrl": "https://www.notion.so/285799f2efe780e4b704ddb99840cedc"
        },
        "triggerOn": "pageUpdated",
        "additionalFields": {
          "filter": {
            "property": "Status",
            "select": {
              "equals": "In progress"
            }
          }
        }
      },
      "id": "notion-trigger-in-progress",
      "name": "Notion Trigger (In Progress)",
      "position": [200, 300],
      "type": "n8n-nodes-base.notionTrigger",
      "typeVersion": 1,
      "webhookId": "notion-in-progress-webhook",
      "credentials": {
        "notionApi": {
          "id": "Fco3vZMOQ5dlVE5R",
          "name": "Notion account"
        }
      },
      "notes": "Triggers when Notion page status changes to 'In progress'"
    },
    {
      "parameters": {
        "pageId": "={{ $json.page.id }}",
        "options": {
          "includeChildren": true
        }
      },
      "id": "get-page-details",
      "name": "Get Page Details",
      "position": [400, 300],
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2,
      "credentials": {
        "notionApi": {
          "id": "Fco3vZMOQ5dlVE5R",
          "name": "Notion account"
        }
      },
      "notes": "Retrieves full page content including title, summary, body, tool, category"
    },
    {
      "parameters": {
        "jsCode": "console.log('üöÄ Starting AI processing for page:', $json.properties.Title?.title?.[0]?.plain_text || 'Unknown');\nconsole.log('üìÑ Page ID:', $json.id);\nreturn $input.all();"
      },
      "id": "log-ai-start",
      "name": "Log AI Start",
      "position": [600, 200],
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "notes": "Logs the start of AI processing"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4-turbo-preview"
        },
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are a content writer specializing in beginner-friendly explanations. Rewrite and enhance the provided content to be more accessible, engaging, and comprehensive while maintaining the original meaning and structure. Focus on making complex topics easy to understand for newcomers."
            },
            {
              "role": "user",
              "content": "Please rewrite and enhance this content for beginners:\n\nTitle: {{ $json.properties.Title?.title?.[0]?.plain_text || 'No title' }}\nSummary: {{ $json.properties.Summary?.rich_text?.[0]?.plain_text || 'No summary' }}\nBody: {{ $json.properties.Body?.rich_text?.[0]?.plain_text || 'No body content' }}\nTool: {{ $json.properties.Tool?.select?.name || 'No tool specified' }}\nCategory: {{ $json.properties.Category?.select?.name || 'No category specified' }}\n\nPlease provide a complete, beginner-friendly version that includes:\n1. An engaging introduction that hooks the reader\n2. Clear explanations with practical examples\n3. Step-by-step instructions where applicable\n4. Visual cues and formatting for web publication\n5. A helpful conclusion with next steps\n6. Proper HTML formatting for web publication\n\nMake sure the content is comprehensive but easy to follow."
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 4000
        }
      },
      "id": "ai-rewrite-chatgpt",
      "name": "AI Rewrite (ChatGPT)",
      "position": [800, 300],
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "huPV5N8waw1wiYCZ",
          "name": "OpenAi account"
        }
      },
      "notes": "Uses GPT-4 Turbo to rewrite content for beginners"
    },
    {
      "parameters": {
        "jsCode": "console.log('‚úÖ AI processing completed. Response length:', $json.choices?.[0]?.message?.content?.length || 0);\nconsole.log('üìù AI Output preview:', $json.choices?.[0]?.message?.content?.substring(0, 100) + '...');\nreturn $input.all();"
      },
      "id": "log-ai-complete",
      "name": "Log AI Complete",
      "position": [1000, 200],
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "notes": "Logs completion of AI processing"
    },
    {
      "parameters": {
        "pageId": "={{ $('Get Page Details').item.json.id }}",
        "operation": "update",
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "AI Output",
              "richTextValue": "={{ $json.choices[0].message.content }}"
            },
            {
              "key": "AI Review",
              "checkboxValue": true
            },
            {
              "key": "Status",
              "selectValue": "Ready"
            }
          ]
        }
      },
      "id": "update-page-set-ready",
      "name": "Update Page (Set Ready)",
      "position": [1200, 300],
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2,
      "credentials": {
        "notionApi": {
          "id": "Fco3vZMOQ5dlVE5R",
          "name": "Notion account"
        }
      },
      "notes": "Updates Notion page with AI output, sets AI Review to true, and changes status to Ready"
    },
    {
      "parameters": {
        "databaseId": {
          "__rl": true,
          "value": "285799f2-efe7-80e4-b704-ddb99840cedc",
          "mode": "list",
          "cachedResultName": "Content Pipeline",
          "cachedResultUrl": "https://www.notion.so/285799f2efe780e4b704ddb99840cedc"
        },
        "triggerOn": "pageUpdated",
        "additionalFields": {
          "filter": {
            "property": "Status",
            "select": {
              "equals": "Completed"
            }
          }
        }
      },
      "id": "notion-trigger-completed",
      "name": "Notion Trigger (Completed)",
      "position": [200, 600],
      "type": "n8n-nodes-base.notionTrigger",
      "typeVersion": 1,
      "webhookId": "notion-completed-webhook",
      "credentials": {
        "notionApi": {
          "id": "Fco3vZMOQ5dlVE5R",
          "name": "Notion account"
        }
      },
      "notes": "Triggers when Notion page status changes to 'Completed'"
    },
    {
      "parameters": {
        "pageId": "={{ $json.page.id }}",
        "options": {
          "includeChildren": true
        }
      },
      "id": "get-page-details-completed",
      "name": "Get Page Details (Completed)",
      "position": [400, 600],
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2,
      "credentials": {
        "notionApi": {
          "id": "Fco3vZMOQ5dlVE5R",
          "name": "Notion account"
        }
      },
      "notes": "Retrieves page details for Ghost publication"
    },
    {
      "parameters": {
        "jsCode": "console.log('üåê Starting Ghost publication for page:', $json.properties.Title?.title?.[0]?.plain_text || 'Unknown');\nconsole.log('üìÑ Page ID:', $json.id);\nreturn $input.all();"
      },
      "id": "log-ghost-start",
      "name": "Log Ghost Start",
      "position": [600, 500],
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "notes": "Logs the start of Ghost publication"
    },
    {
      "parameters": {
        "url": "={{ $env.GHOST_URL }}/ghost/api/admin/posts/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Ghost {{ $env.GHOST_API_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "posts",
              "value": "=[{\"title\": \"{{ $json.properties.Title?.title?.[0]?.plain_text || 'No title' }}\", \"html\": \"{{ $json.properties['AI Output']?.rich_text?.[0]?.plain_text || $json.properties.Body?.rich_text?.[0]?.plain_text || 'No content' }}\", \"excerpt\": \"{{ $json.properties.Summary?.rich_text?.[0]?.plain_text || 'No summary' }}\", \"tags\": [\"{{ $json.properties.Tool?.select?.name || 'general' }}\", \"{{ $json.properties.Category?.select?.name || 'uncategorized' }}\"], \"status\": \"published\"}]"
            }
          ]
        },
        "options": {}
      },
      "id": "post-to-ghost",
      "name": "Post to Ghost",
      "position": [800, 600],
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "notes": "Creates new post in Ghost with title, HTML content, excerpt, and tags"
    },
    {
      "parameters": {
        "jsCode": "const response = $json;\nconst postUrl = response.posts?.[0]?.url || 'No URL returned';\nconsole.log('‚úÖ Ghost publication completed. Post URL:', postUrl);\nconsole.log('üìä Post ID:', response.posts?.[0]?.id || 'No ID');\nreturn [{\n  json: {\n    ...response,\n    postUrl: postUrl\n  }\n}];"
      },
      "id": "log-ghost-complete",
      "name": "Log Ghost Complete",
      "position": [1000, 500],
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "notes": "Logs completion of Ghost publication and extracts post URL"
    },
    {
      "parameters": {
        "pageId": "={{ $('Get Page Details (Completed)').item.json.id }}",
        "operation": "update",
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Publication URL",
              "urlValue": "={{ $json.postUrl }}"
            },
            {
              "key": "Status",
              "selectValue": "Published"
            }
          ]
        }
      },
      "id": "update-page-published",
      "name": "Update Page (Published)",
      "position": [1200, 600],
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2,
      "credentials": {
        "notionApi": {
          "id": "Fco3vZMOQ5dlVE5R",
          "name": "Notion account"
        }
      },
      "notes": "Updates Notion page with publication URL and sets status to Published"
    },
    {
      "id": "workflow-documentation",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [50, 50],
      "parameters": {
        "content": "# Complete Content Pipeline: Notion ‚Üí OpenAI ‚Üí Ghost\n\n## üéØ Overview\nAutomated content pipeline that processes Notion pages through AI enhancement and publishes to Ghost CMS.\n\n## üîÑ Workflow Flow\n1. **Notion Trigger (In Progress)**: Detects when page status changes to 'In progress'\n2. **Get Page Details**: Retrieves full page content\n3. **AI Rewrite (ChatGPT)**: Enhances content using GPT-4 Turbo\n4. **Update Page (Set Ready)**: Updates Notion with AI output and sets status to 'Ready'\n5. **Notion Trigger (Completed)**: Detects when page status changes to 'Completed'\n6. **Post to Ghost**: Publishes content to Ghost CMS\n7. **Update Page (Published)**: Updates Notion with publication URL\n\n## üîê Credentials Used\n- **Notion API**: Fco3vZMOQ5dlVE5R (Notion account)\n- **OpenAI API**: huPV5N8waw1wiYCZ (OpenAi account)\n- **Database ID**: 285799f2-efe7-80e4-b704-ddb99840cedc\n\n## üåç Environment Variables Required\n- `GHOST_URL`: Ghost CMS URL (e.g., https://your-site.com)\n- `GHOST_API_KEY`: Ghost Admin API key\n\n## üìä Status Flow\n**In progress** ‚Üí **Ready** ‚Üí **Completed** ‚Üí **Published**\n\n## üìù Notion Database Fields\n- Title, Summary, Body, Tool, Category\n- Status, AI Output, AI Review, Publication URL\n\n## ‚ú® Features\n- Comprehensive logging with emojis\n- Error handling\n- Production-ready settings\n- Sequential execution order"
      }
    },
    {
      "id": "error-handler",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [1400, 400],
      "parameters": {
        "message": "Content pipeline workflow error occurred",
        "options": {}
      },
      "notes": "Handles errors in the content pipeline workflow"
    }
  ],
  "connections": {
    "Notion Trigger (In Progress)": {
      "main": [
        [
          {
            "node": "Get Page Details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Page Details": {
      "main": [
        [
          {
            "node": "Log AI Start",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log AI Start": {
      "main": [
        [
          {
            "node": "AI Rewrite (ChatGPT)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Rewrite (ChatGPT)": {
      "main": [
        [
          {
            "node": "Log AI Complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log AI Complete": {
      "main": [
        [
          {
            "node": "Update Page (Set Ready)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion Trigger (Completed)": {
      "main": [
        [
          {
            "node": "Get Page Details (Completed)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Page Details (Completed)": {
      "main": [
        [
          {
            "node": "Log Ghost Start",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Ghost Start": {
      "main": [
        [
          {
            "node": "Post to Ghost",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post to Ghost": {
      "main": [
        [
          {
            "node": "Log Ghost Complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Ghost Complete": {
      "main": [
        [
          {
            "node": "Update Page (Published)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "timezone": "UTC",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": null,
    "executionTimeout": 3600,
    "maxExecutions": 1000,
    "retryOnFail": true,
    "retryCount": 3,
    "retryDelay": 1000
  },
  "staticData": null,
  "tags": [
    "content-pipeline",
    "notion",
    "openai",
    "ghost",
    "automation",
    "cms",
    "production-ready"
  ],
  "triggerCount": 2,
  "updatedAt": "2024-01-15T10:00:00.000Z",
  "versionId": "1.0.0",
  "id": "complete-content-pipeline-workflow",
  "meta": {
    "instanceId": "complete-content-pipeline-instance",
    "versionId": "1.0.0",
    "createdAt": "2024-01-15T10:00:00.000Z",
    "updatedAt": "2024-01-15T10:00:00.000Z",
    "owner": "content-team",
    "license": "MIT",
    "category": "content-automation",
    "status": "active",
    "priority": "high",
    "environment": "production"
  },
  "description": "Complete content pipeline workflow using existing credentials that automatically processes Notion pages through AI enhancement and publishes to Ghost CMS with comprehensive logging and status management."
}
